var tipuesearch = {"pages": [{'title': 'About', 'text': '課程網站: http://mde.tw/cad2020/content/index.html \n 我的倉儲: https://github.com/40823219/cd2021 \n 小組倉儲: https://github.com/40823219/stage1-bg19 \n 兩人小組:40823219、 40823231 \n 四人小組倉儲: https://github.com/40823236/stage2-bg9 \n 四人小組成員:40823219、 40823231 、 40823236 、 40823212 \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'stage1', 'text': '', 'tags': '', 'url': 'stage1.html'}, {'title': 'W1討論小組專題', 'text': '主題:格鬥機器人 \n \n', 'tags': '', 'url': 'W1討論小組專題.html'}, {'title': 'W2小組繪圖', 'text': '主題:格鬥機器人 \n 繪製人員:40823219、40823231 \n 程式模擬:40823219、40823231 \n 零件圖檔: 格鬥機器人 \n 車身主體 \n \n 彈跳板 \n \n 輪胎 \n \n 傳動軸 \n \n 氣瓶 \n \n', 'tags': '', 'url': 'W2小組繪圖.html'}, {'title': 'W3程式模擬', 'text': '第一次模擬失敗 \n \n', 'tags': '', 'url': 'W3程式模擬.html'}, {'title': 'W4影片及報告', 'text': '小組報告: stage1-bg19報告 最後影片 \n \n', 'tags': '', 'url': 'W4影片及報告.html'}, {'title': 'stage2', 'text': '', 'tags': '', 'url': 'stage2.html'}, {'title': 'W5 討論主題及分工', 'text': '主題討論 \n 主題:蒸汽火車 \n 分工: \n 繪製圖檔:40823212 \n 程式模擬:40823219、40823231、40823236 \n 網頁編輯:40823219、40823236 \n', 'tags': '', 'url': 'W5 討論主題及分工.html'}, {'title': 'W6~W7繪製圖檔', 'text': '圖檔: 蒸汽火車.zip \n \n', 'tags': '', 'url': 'W6~W7繪製圖檔.html'}, {'title': 'W7~W8程式模擬', 'text': '第一次模擬 \n \n 第二次模擬 \n \n', 'tags': '', 'url': 'W7~W8程式模擬.html'}, {'title': 'W9小組報告', 'text': '\n', 'tags': '', 'url': 'W9小組報告.html'}, {'title': 'stage3', 'text': '', 'tags': '', 'url': 'stage3.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': 'task1', 'text': '\n stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site ----------  >Exit code: 0 \n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': '\n', 'tags': '', 'url': 'task2.html'}, {'title': 'W11', 'text': '直播教學 \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '第二次直播教學 \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': 'RoboDK測試 \n', 'tags': '', 'url': 'W13.html'}, {'title': '零件', 'text': '', 'tags': '', 'url': '零件.html'}, {'title': '彈珠檯', 'text': '主體 \n \n 擊球機構 \n \n 往復機構 \n \n', 'tags': '', 'url': '彈珠檯.html'}, {'title': '迷宮', 'text': '組合圖 \n \n 迷宮主體 \n \n 第二層支架 \n \n 第三層支架 \n \n 桿子四個(用來連接支架) \n \n 風扇機構 \n \n 風扇連接桿 \n \n 滑板機構 \n \n 連接滑板機構 \n \n', 'tags': '', 'url': '迷宮.html'}, {'title': '模擬', 'text': '', 'tags': '', 'url': '模擬.html'}, {'title': '彈珠檯模擬', 'text': 'stage3模擬，但模擬過程中，一開始的擊球機構沒控制好的話會把球彈到後面去，這邊還需要修改一下，這次是用lua的程式碼下去，可以用鍵盤控制，分別是q、p、a、;、z、.。 \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n  \nprint (\'Start\')\n  \n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n   \nif clientID !=-1:\n    print (\'Connected to remote API server\')\n    \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823222",\n        vrep.simx_opmode_oneshot)\n           \n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n           \n    opmode = vrep.simx_opmode_oneshot_wait\n      \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,shaft1=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,shaft2=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,shaft3=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n \n    while True:\n        if keyboard.is_pressed("q"):\n            vrep.simxSetJointTargetPosition(clientID,shaft1,-200,opmode)\n            print("q")\n             \n        if keyboard.is_pressed("p"):\n            vrep.simxSetJointTargetPosition(clientID,shaft1,200,opmode)\n            print("p")\n             \n        if keyboard.is_pressed("a"):\n            vrep.simxSetJointTargetPosition(clientID,shaft2,90,opmode)\n            print("a")\n \n        if keyboard.is_pressed(";"):\n            vrep.simxSetJointTargetPosition(clientID,shaft2,0,opmode)\n            print(";")\n             \n        if keyboard.is_pressed("z"):\n            vrep.simxSetJointTargetPosition(clientID,shaft3,90,opmode)\n            print("z")\n \n        if keyboard.is_pressed("."):\n            vrep.simxSetJointTargetPosition(clientID,shaft3,0,opmode)\n            print(".")            \nelse:\n    print (\'Failed connecting to  remote API server\')\n    print (\'End\') \n if keyboard.is_pressed("q"): vrep.simxSetJointTargetPosition(clientID,shaft1,-200,opmode) \n 假設說按鍵按q的話，shaft1的旋轉軸會移動角度到-200度。 \n', 'tags': '', 'url': '彈珠檯模擬.html'}, {'title': '火車模擬', 'text': '\n import sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n   \nprint (\'Start\')\n   \n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'192.168.1.110\', 19997, True, True, 5000, 5)\n    \nif clientID !=-1:\n    print (\'Connected to remote API server\')\n     \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "all start",\n        vrep.simx_opmode_oneshot)\n            \n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n            \n    opmode = vrep.simx_opmode_oneshot_wait\n       \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,wheel1=vrep.simxGetObjectHandle(clientID,"wheel_1",opmode)\n    ret,wheel2=vrep.simxGetObjectHandle(clientID,"wheel_2",opmode)\n    ret,wheel3=vrep.simxGetObjectHandle(clientID,"wheel_3",opmode)\n    ret,wheel4=vrep.simxGetObjectHandle(clientID,"wheel_4",opmode)\n  \n    while True:\n        if keyboard.is_pressed("g"):\n            vrep.simxSetJointTargetVelocity(clientID,wheel1,20,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel2,20,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel3,20,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel4,20,opmode)\n            print("go")\n              \n        if keyboard.is_pressed("r"):\n            vrep.simxSetJointTargetVelocity(clientID,wheel1,-20,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel2,-20,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel3,-20,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel4,-20,opmode)\n            print("back")\n              \n        if keyboard.is_pressed("s"):\n            vrep.simxSetJointTargetVelocity(clientID,wheel1,0,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel2,0,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel3,0,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,wheel4,0,opmode)\n            print("stop")\n          \nelse:\n    print (\'Failed connecting to  remote API server\')\n    print (\'End\')\n \n \n', 'tags': '', 'url': '火車模擬.html'}, {'title': 'W5', 'text': '報告影片 \n \n 設計二甲報告影片 \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W15', 'text': '\n \n 終點座標是(x、y)，垂直高度是x水平寬度是y \n 使用畢氏定理可的方程式 \n \n 此圖可得知餘弦定理 \n \n \n 特定的線性函數不是幾何，有一個表達式E \n 旋轉q1沿x方向平移a1；旋轉q2，由a2在x方向進行平移，如果展開這個，全部相乘 \n 一起轉變得到此表達式，表示尾端姿態的矩陣 \n \n 分解x與y座標 \n \n 平方X和Y方程式後兩兩相加可得知角度q2 \n \n \n 製作後的方程式: \n \n 此為已知方程式: \n \n 只考慮y的方程式，可以確定a、b、c值，一旦知道這些，那麼就可以有q1的方程式 \n \n \n 將前面得知地此式，帶入q1進行簡化 \n \n 即可得此式 \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '1.Onshape零組件繪製 \n 連結: \n https://cad.onshape.com/documents/c49aace71aea1a418e307166/w/b445d5c2a869d2112924 1371/e/cc2815fe83bc65ce54266531 \n 圖檔下載: MTB ROBOT \n \n 2.創建CoppeliaSim 4.1.0 MTB機器人場景 \n function sysCall_init()\n    joint1=sim.getObjectHandle(\'joint1\')\n    joint2=sim.getObjectHandle(\'joint2\')\n    joint3=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint1,0)\n    sim.setJointTargetPosition(joint2,0)\n    sim.setJointTargetPosition(joint3,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0\n    deg2=0\n    deg3=0\n     \nend\n\nfunction sysCall_actuation()\n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==97) then\n            deg1=deg1+1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint1,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==100) then\n            deg1=deg1-1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint1,deg1*math.pi/180)\n            end\n            if(auxiliaryData[1]==119) then\n            deg2=deg2+1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint2,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==115) then\n            deg2=deg2-1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint2,deg2*math.pi/180)\n            end\n            if(auxiliaryData[1]==2008) then\n               sim.setJointTargetPosition(jointz,-0.073)\n               sim.setIntegerSignal("pad_switch",1)\n            end\n            if(auxiliaryData[1]==2007) then\n               sim.setJointTargetPosition(jointz,0)\n            end\n            if(auxiliaryData[1]==32) then\n               sim.setIntegerSignal("pad_switch",0)\n            end\n            sim.setJointTargetPosition(joint3,(deg2-deg1)*math.pi/180)\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()   \n    end   \nend\n\n \n \n A鍵為joint1左轉、D鍵為joint2右轉 \n W鍵為joint1左轉、S鍵為join2右轉 \n 下鍵為吸盤往下、上鍵為吸盤往上、空白鍵為吸盤放開 \n \n \n 3.手臂末端加入suction pad吸盤 \n \n 4.逆向運算學函示 \n \n \n function moving(x,y)\n    a=0.6\n    b=0.5\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n\n\nfunction sysCall_threadmain()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(5)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.wait(5)\n    sim.setJointTargetPosition(jointz,-0.073)\n    sim.wait(5)\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do\n        sim.setJointTargetPosition(jointz,0)\n        moving(0.2,0.7)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",0)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,-0.078)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(5)\n        moving(-0.3,-0.55)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",0)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,-0.083)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(5)\n        end\n    end\n \n 5.Python remote API逆向運算學函示 \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport math\n\ndef moving(x,y):\n        a=0.6\n        b=0.5\n        c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n        s=(a+b+c)/2\n        area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n        h=area/(2*c)\n        deg1_base=math.atan(x/y)\n        if x<0 and y<0:\n                deg1_base=deg1_base+math.pi\n        deg1_tri=math.asin(h/a)\n        deg1=deg1_base+deg1_tri\n        deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n        deg3=deg2-deg1\n        vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,joint02,-deg2,opmode)\n        vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)\n     \n      \n       \nprint (\'Start\')\n \nvrep.simxFinish(-1)\n \nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n  \nif clientID != -1:\n    print (\'Connected to remote API server\')\n      \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823219",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n  \n     \n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n  \n     \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)\n    \n    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.073,opmode)\n    time.sleep(1)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n    while True:\n        moving(0.2,0.7)\n        time.sleep(1)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(1)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.078,opmode)\n        time.sleep(1)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n        moving(-0.3,-0.55)\n        time.sleep(1)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(1)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.083,opmode)\n        time.sleep(1)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n        time.sleep(1)\n    \n    \n     \n 心得:這一次作業的能夠順利完成，要非常感謝我們班的40823214林厚宇，在閒暇之時花了五六個小時重頭到尾教我們一遍，讓我能順利趕上進度。 \n', 'tags': '', 'url': 'W16.html'}, {'title': '心得', 'text': '這學期的步調走得非常的快，從兩人小組到八人小組中我學到了很多，在繪圖及coppeliasim操作上相比之前熟練也初步了解lua及python程式語言，希望未來可將其學以致用。', 'tags': '', 'url': '心得.html'}]};